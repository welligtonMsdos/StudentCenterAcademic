 @inherits LayoutComponentBase

<MudThemeProvider IsDarkMode="false"/>
<MudDialogProvider />
<MudSnackbarProvider />
<MudPopoverProvider />

<MudLayout>   

    <MudAppBar Color="Color.Primary" Fixed="false">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@ToggleDrawer" />

        <MudText Typo="Typo.h6">CA - Acadêmico</MudText>        

        <MudSpacer />

        <AuthorizeView>
            <Authorized>
                <p class="my-3 me-3">Olá, @context.User.Identity?.Name!</p>               
                <MudButton Color="Color.Inherit" OnClick="Logout" Variant="Variant.Text">
                    Logout
                </MudButton>
            </Authorized>
            <NotAuthorized>
                <MudButton Color="Color.Inherit" Variant="Variant.Text">
                    <MudIconButton Icon="@Icons.Material.Filled.Login" Color="Color.Inherit" Href="Login" /> Login
                </MudButton>
            </NotAuthorized>
        </AuthorizeView>
        
    </MudAppBar>   

    <MudDrawer @bind-Open="@_open" ClipMode="_clipMode" Elevation="1" Variant="@DrawerVariant.Responsive">
        <NavMenu>

        </NavMenu>
    </MudDrawer>

    <MudMainContent Class="main-content pa-2">
        @Body
    </MudMainContent>
</MudLayout>

@inject AuthenticationStateProvider provider
@inject NavigationManager navigationManager

@code {   

    private bool _open = false;
    private bool _dense = false;
    private DrawerClipMode _clipMode = DrawerClipMode.Never;

    private void ToggleDrawer()
    {
        _open = !_open;
    }

    private void Logout()
    {
        var authStateProvider = (CustomAuthStateProvider)provider;

        authStateProvider.Logout();

        navigationManager.NavigateTo("/login");
    }
   
}