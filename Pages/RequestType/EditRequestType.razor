@page "/EditRequestType"

<MudGrid>

    <MudItem xs="12" sm="4">

        <MudPaper Class="pa-4">

            <MudForm @ref="form" @bind-IsValid="@success">

                <MudTextField T="string"
                              Label="Descrição"
                              Required="true"
                              RequiredError="Campo obrigatório!"
                              @bind-Value="description" />

            </MudForm>

        </MudPaper>

        <MudPaper Class="pa-4 mt-4">

            <MudButton Variant="Variant.Filled" Color="Color.Primary" DropShadow="false" @onclick="Salvar">Salvar</MudButton>

            <MudButton Variant="Variant.Filled" Color="Color.Secondary" DropShadow="false" Class="mx-2" @onclick="Back">Voltar</MudButton>

        </MudPaper>

    </MudItem>

</MudGrid>

@inject ISnackbar Snackbar
@inject IStudentCenterService studentCenterService
@inject NavigationManager navManager
@inject RequestTypeStateService requestTypeStateService

@code {

    bool success;

    int id;

    string description;

    MudForm form;

    private RequestTypeDto requestType;

    protected override void OnInitialized()
    {
        requestType = requestTypeStateService.CurrentRequestType;

        id = requestType.Id;

        description = requestType.Description;
    }

    private async Task Salvar()
    {
        await form.Validate();

        if (success)
        {
            var editRequestType = new RequestTypeUpdateDto(id, description);

            var result = await studentCenterService.PutRequestType(editRequestType);

            if (result.Success)
            {
                Snackbar.Add(result.Message, Severity.Success);
                navManager.NavigateTo("/RequestType");
            }
            else
                Snackbar.Add(result.Message, Severity.Error);
        }
    }

    private void Back()
    {
        navManager.NavigateTo("/RequestType");
    }

}
