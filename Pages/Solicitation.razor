@page "/solicitation"

@inject IStudentCenterService studentCenterService

@if (solicitations != null && solicitations.Count > 0)
{
    <MudGrid Spacing="3" Justify="Justify.Center">

        @foreach (var item in solicitations)
        {
           <MudItem xs="12" sm="6" md="3">

                <MudCard Elevation="3">

                    <MudCardHeader>                        
                        <CardHeaderContent>
                            <MudText Typo="Typo.body1">@item.Description</MudText>                            
                        </CardHeaderContent>                       
                    </MudCardHeader>    
                    
                    <MudCardContent>
                        <MudText Typo="Typo.body2">@item.Description</MudText>
                    </MudCardContent>

                    <MudCardActions>
                        <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Outlined.Save" Color="Color.Surface" IconColor="Color.Surface" Size="Size.Large">Save</MudButton>
                    </MudCardActions>

                </MudCard>

            </MudItem>
        }

   </MudGrid>
}
else
{
    <MudAlert Severity="Severity.Info">Aguarde...</MudAlert>
}

@code {
    private ICollection<SolicitationDto> solicitations;

    protected override async Task OnInitializedAsync()
    {
        solicitations = await studentCenterService.GetAllSolicitationPendingStatuses();
    }
}
